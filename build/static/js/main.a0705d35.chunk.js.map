{"version":3,"sources":["components/Filter.js","services/persons.js","components/DisplayPersons.js","components/InputForm.js","components/Notification.js","App.js","index.js"],"names":["Filter","persons","filterInput","inputLower","toLowerCase","filter","person","name","includes","baseUrl","exportedObject","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","res","erase","params","delete","DisplayPersons","setPersons","map","number","onClick","object","console","log","window","confirm","personService","Erase","InputForm","value","onChange","errorStyle","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","messageStyle","Notification","error","Boolean","text","style","App","useState","newName","setNewName","newNumber","setNewNumber","setFilterInput","notification","setNotification","useEffect","event","target","onSubmit","preventDefault","personObject","test","names","ids","indexOf","catch","alert","concat","setTimeout","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a0705d35.chunk.js","sourcesContent":["const Filter = (persons, filterInput) => {\r\n  const inputLower = filterInput.toLowerCase()\r\n  const personToShow = persons.filter(person => person.name.toLowerCase().includes(inputLower))\r\n\r\n  return personToShow\r\n}\r\n\r\nexport default Filter","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject).then(res => res.data)\r\n}\r\n\r\nconst erase = (params) => {\r\n  return axios.delete(`${baseUrl}/${params.params.id}`)\r\n}\r\n\r\nconst exportedObject = {\r\n  getAll: getAll,\r\n  create: create,\r\n  update: update,\r\n  erase: erase\r\n}\r\n\r\nexport default exportedObject\r\n\r\n/*\r\naxios\r\n      .post('http://localhost:3001/persons', personObject)\r\n      .then(response => {\r\n        setPersons(persons.concat(response.data))\r\n        setNewName('')\r\n        setNewNumber('')\r\n      })*/","import React from 'react'\r\nimport Filter from './Filter'\r\nimport personService from '../services/persons'\r\n\r\nconst Erase = (object, setPersons) => {\r\n  console.log(`Erase ${object.id}?`)\r\n  if (window.confirm(`Are you sure you want to delete ${object.name}?`)) {\r\n    personService\r\n      .erase({params: {id: object.id}})\r\n      .then(response => {\r\n        personService.getAll().then(response => {setPersons(response)})\r\n      })\r\n  }\r\n}\r\n\r\nconst DisplayPersons = (persons, filterInput, setPersons) => {\r\n  return(\r\n    Filter(persons, filterInput).map(person => \r\n      <p key={person.name}>\r\n        {person.name} {person.number} {\"\"}\r\n        <button onClick={() => Erase(person, setPersons)}>DELETE</button>\r\n      </p>\r\n    )\r\n  )\r\n}\r\n\r\nexport default DisplayPersons","import React from 'react'\r\n\r\nconst InputForm = (name, value, onChange) => {\r\n  return(\r\n    <div>\r\n      {name}<input value={value} onChange={onChange} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InputForm","\r\n\r\nconst errorStyle = {\r\n  color: 'red',\r\n  background: 'lightgrey',\r\n  fontSize: '20',\r\n  borderStyle: 'solid',\r\n  borderRadius: '5',\r\n  padding: '10',\r\n  marginBottom: '10'\r\n}\r\n\r\nconst messageStyle = {\r\n  color: 'green',\r\n  background: 'lightgrey',\r\n  fontSize: '20',\r\n  borderStyle: 'solid',\r\n  borderRadius: '5',\r\n  padding: '10',\r\n  marginBottom: '10'\r\n}\r\n\r\nconst Notification = ({error=Boolean, text}) => {\r\n  if (text === null) {\r\n    return null\r\n  }\r\n\r\n  if (error) {\r\n    return(\r\n      <div style={errorStyle}>\r\n       {text}\r\n      </div>\r\n    )\r\n    \r\n  } else {\r\n    return(\r\n      <div style={messageStyle}>\r\n        {text}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Notification","import React, { useEffect, useState } from 'react'\nimport DisplayPersons from './components/DisplayPersons'\nimport InputForm from './components/InputForm'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filterInput, setFilterInput] = useState('')\n  const [notification, setNotification] = useState({error:false, text:null})\n  \n  useEffect(() => {\n    personService\n      .getAll()\n      .then(response => {\n        setPersons(response)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n    \n    //Check if the name and/or number field is blank\n    if (!/\\S/.test(newName)) {\n      alert('Please enter a name.');\n      return\n    }\n    if (!/\\S/.test(newNumber)) {\n      alert('Please enter a phone number.');\n      return\n    }\n\n    //Check if the new personObject already exists\n    //Can't 'include' check objects(?), converting to string array\n    const names = persons.map(person => person.name.toLowerCase())\n    const ids = persons.map(person => person.id)\n    if (names.includes(newName.toLowerCase())) {\n      if (window.confirm(`${newName} is already added to the phonebook, replace the old number with a new one?`)){\n        return personService\n                .update(ids[names.indexOf(newName.toLowerCase())], personObject)\n                .then(response => {\n                  personService.getAll().then(response => {setPersons(response)})\n                  setNewName('')\n                  setNewNumber('')\n                })\n                .catch(error => {\n                  alert(\n                    `ERROR: ${newName} has been removed from the server.`\n                  )\n                  setPersons(persons.filter(person => person.id !== names.indexOf(newName.toLowerCase())))\n                })\n      }\n      else return\n    }\n    \n    personService\n      .create(personObject)\n      .then(response => {\n        setPersons(persons.concat(response.data))\n\n        setNotification({error:false, text:`Added ${newName}`})\n        setTimeout(() => {\n          setNotification({error:false, text:null})\n        }, 2000)\n      .catch(error => {\n        console.log(error.response.data)\n        setNotification({error:false, text:`${error.response.data}`})\n        setTimeout(() => {\n          setNotification({error:false, text:null})\n        }, 2000)\n      })\n\n        setNewName('')\n        setNewNumber('')\n      })\n  }\n  \n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleFilterChange = (event) => {\n    setFilterInput(event.target.value)\n  }\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification error={notification.error} text={notification.text} />\n      {InputForm('Filter by name: ', filterInput, handleFilterChange)}\n      <h2>Add a new entry...</h2>\n      <form onSubmit={addPerson}>\n        {InputForm('name: ', newName, handleNameChange)}\n        {InputForm('number: ', newNumber, handleNumberChange)}\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      {DisplayPersons(persons, filterInput, setPersons)}\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\n\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}